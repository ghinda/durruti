{"version":3,"file":null,"sources":["/run/media/mokush/work/dev/durruti/src/util.js","/run/media/mokush/work/dev/durruti/src/listeners.js","/run/media/mokush/work/dev/durruti/src/dom.js","/run/media/mokush/work/dev/durruti/src/durruti.js"],"sourcesContent":["/* Durruti\n * Utils.\n */\n\nfunction hasWindow () {\n  return (typeof window !== 'undefined')\n}\n\nexport var isClient = hasWindow()\n\nexport function clone (obj) {\n  return JSON.parse(JSON.stringify(obj))\n}\n\n// one-level object extend\nexport function extend (obj = {}, defaults) {\n  // clone object\n  var extended = clone(obj)\n\n  // copy default keys where undefined\n  Object.keys(defaults).forEach(function (key) {\n    if (typeof extended[key] === 'undefined') {\n      extended[key] = defaults[key]\n    }\n  })\n\n  return extended\n}\n\nvar DURRUTI_DEBUG = true\n\nexport function warn () {\n  if (DURRUTI_DEBUG === true) {\n    console.warn.apply(console, arguments)\n  }\n}\n","/* Durruti\n * Capture and remove event listeners.\n */\n\nimport * as util from './util'\n\nvar removeListeners = () => {}\n\n// capture all listeners\nvar events = []\nvar domEventTypes = []\n\nfunction getDomEventTypes () {\n  var eventTypes = []\n  for (let attr in document) {\n    // starts with on\n    if (attr.substr(0, 2) === 'on') {\n      eventTypes.push(attr)\n    }\n  }\n\n  return eventTypes\n}\n\nvar originalAddEventListener\n\nfunction captureAddEventListener (type, fn, capture) {\n  originalAddEventListener.apply(this, arguments)\n\n  events.push({\n    target: this,\n    type: type,\n    fn: fn,\n    capture: capture\n  })\n}\n\nfunction removeNodeOnEvents (nodes) {\n  nodes.forEach(($node) => {\n    domEventTypes.forEach((eventType) => {\n      $node[eventType] = null\n    })\n  })\n}\n\nfunction removeNodeEvents (nodes) {\n  var i = 0\n\n  while (i < events.length) {\n    if (nodes.indexOf(events[i].target) !== -1) {\n      var $node = events[i].target\n      // remove listener\n      $node.removeEventListener(events[i].type, events[i].fn, events[i].capture)\n\n      // remove event\n      events.splice(i, 1)\n      i--\n    }\n\n    i++\n  }\n\n  // remove on* listeners\n  removeNodeOnEvents(nodes)\n}\n\nfunction getNodeList ($node, traverse, nodes = []) {\n  nodes.push($node)\n\n  // traverse element children\n  if (traverse && $node.children) {\n    for (let i = 0; i < $node.children.length; i++) {\n      getNodeList($node.children[i], true, nodes)\n    }\n  }\n\n  return nodes\n}\n\nif (util.isClient) {\n  domEventTypes = getDomEventTypes()\n\n  // capture addEventListener\n\n  // IE\n  if (window.Node.prototype.hasOwnProperty('addEventListener')) {\n    originalAddEventListener = window.Node.prototype.addEventListener\n    window.Node.prototype.addEventListener = captureAddEventListener\n  } else if (window.EventTarget.prototype.hasOwnProperty('addEventListener')) {\n    // standard\n    originalAddEventListener = window.EventTarget.prototype.addEventListener\n    window.EventTarget.prototype.addEventListener = captureAddEventListener\n  }\n\n  // traverse and remove all events listeners from nodes\n  removeListeners = ($node, traverse) => {\n    removeNodeEvents(getNodeList($node, traverse))\n  }\n}\n\nexport default removeListeners\n","/* Durruti\n * DOM patch - morphs a DOM node into another.\n */\n\nimport removeListeners from './listeners.js'\n\nvar propMap = {\n  tabindex: 'tabIndex',\n  readonly: 'readOnly',\n  for: 'htmlFor',\n  class: 'className',\n  maxlength: 'maxLength',\n  cellspacing: 'cellSpacing',\n  cellpadding: 'cellPadding',\n  rowspan: 'rowSpan',\n  colspan: 'colSpan',\n  usemap: 'useMap',\n  frameborder: 'frameBorder',\n  contenteditable: 'contentEditable'\n}\n\nfunction traverse ($node, $newNode, patches) {\n  // traverse\n  for (let i = 0; i < $node.childNodes.length; i++) {\n    diff($node.childNodes[i], $newNode.childNodes[i], patches)\n  }\n}\n\nfunction mapAttributes ($node, $newNode) {\n  var attrs = {}\n  var oldAttributes = $node.attributes\n  var newAttributes = $newNode.attributes\n\n  for (let i = 0; i < oldAttributes.length; i++) {\n    // IE9 returns `checked` as `CHECKED`\n    attrs[oldAttributes[i].name.toLowerCase()] = null\n  }\n\n  for (let i = 0; i < newAttributes.length; i++) {\n    attrs[newAttributes[i].name.toLowerCase()] = newAttributes[i].value\n  }\n\n  return attrs\n}\n\nfunction patchAttrs ($node, $newNode) {\n  // map attributes\n  var attrs = mapAttributes($node, $newNode)\n\n  // add-change attributes\n  for (let prop in attrs) {\n    if (attrs[prop] === null) {\n      $node.removeAttribute(prop)\n    } else {\n      $node.setAttribute(prop, attrs[prop])\n    }\n\n    // for properties that need to change with attributes,\n    // but don't when changed by user input.\n    // eg. checked\n    $node[propMap[prop] || prop] = attrs[prop]\n  }\n}\n\nexport function diff ($node, $newNode, patches = []) {\n  var patch = {\n    node: $node,\n    newNode: $newNode\n  }\n\n  // push traversed node to patch list\n  patches.push(patch)\n\n  // if one of them is not an element node,\n  // or the tag changed,\n  // or not the same number of children.\n  if ($node.nodeType !== 1 ||\n    $newNode.nodeType !== 1 ||\n    $node.tagName !== $newNode.tagName ||\n    $node.childNodes.length !== $newNode.childNodes.length) {\n    patch.replace = true\n  } else {\n    // check if attributes changed\n    if (!$node.cloneNode().isEqualNode($newNode.cloneNode())) {\n      patch.update = true\n    }\n\n    // traverse childNodes\n    traverse($node, $newNode, patches)\n  }\n\n  return patches\n}\n\nfunction applyPatch (patch) {\n  if (patch.replace) {\n    patch.node.parentNode.replaceChild(patch.newNode, patch.node)\n  } else if (patch.update) {\n    patchAttrs(patch.node, patch.newNode)\n\n    // remove listeners on node\n    removeListeners(patch.node)\n  } else {\n    // remove listeners on node and children\n    removeListeners(patch.node, true)\n  }\n}\n\nexport function patch (patches) {\n  patches.forEach(applyPatch)\n\n  return patches\n}\n\n","/* Durruti\n * Micro Isomorphic JavaScript library for building user interfaces.\n */\n\nimport * as util from './util'\nimport * as dom from './dom'\n\nconst durrutiAttr = 'data-durruti-id'\nconst durrutiElemSelector = `[${durrutiAttr}]`\nvar componentCache = []\nvar componentIndex = 0\n\n// decorate a basic class with durruti specific properties\nfunction decorate (Comp) {\n  var component\n\n  // instantiate classes\n  if (typeof Comp === 'function') {\n    component = new Comp()\n  } else {\n    // make sure we don't change the id on a cached component\n    component = Object.create(Comp)\n  }\n\n  // components get a new id on render,\n  // so we can clear the previous component cache.\n  component._durrutiId = String(componentIndex++)\n\n  // cache component\n  componentCache.push({\n    id: component._durrutiId,\n    component: component\n  })\n\n  return component\n}\n\nfunction getCachedComponent ($node) {\n  // get the component from the dom node - rendered in browser.\n  if ($node._durruti) {\n    return $node._durruti\n  }\n\n  // or get it from the component cache - rendered on the server.\n  var id = $node.getAttribute(durrutiAttr)\n  for (var i = 0; i < componentCache.length; i++) {\n    if (componentCache[i].id === id) {\n      return componentCache[i].component\n    }\n  }\n}\n\n// remove custom data attributes,\n// and cache the component on the DOM node.\nfunction cleanAttrNodes ($container, includeParent) {\n  var nodes = [].slice.call($container.querySelectorAll(durrutiElemSelector))\n\n  if (includeParent) {\n    nodes.push($container)\n  }\n\n  nodes.forEach(($node) => {\n    // cache component in node\n    $node._durruti = getCachedComponent($node)\n\n    // clean-up data attributes\n    $node.removeAttribute(durrutiAttr)\n  })\n\n  return nodes\n}\n\nfunction unmountNode ($node) {\n  var cachedComponent = getCachedComponent($node)\n\n  if (cachedComponent.unmount) {\n    cachedComponent.unmount($node)\n  }\n\n  // clear the component from the cache\n  clearComponentCache(cachedComponent)\n}\n\nfunction mountNode ($node) {\n  var cachedComponent = getCachedComponent($node)\n\n  if (cachedComponent.mount) {\n    cachedComponent.mount($node)\n  }\n}\n\nfunction clearComponentCache (component) {\n  if (component) {\n    for (var i = 0; i < componentCache.length; i++) {\n      if (componentCache[i].id === component._durrutiId) {\n        componentCache.splice(i, 1)\n        return\n      }\n    }\n  } else {\n    // clear the entire component cache\n    componentIndex = 0\n    componentCache.length = 0\n  }\n}\n\nfunction createFragment (template = '') {\n  template = template.trim()\n  var parent = 'div'\n  var $node\n\n  if (template.indexOf('<tr') === 0) {\n    // table row\n    parent = 'tbody'\n  } else if (template.indexOf('<td') === 0) {\n    // table column\n    parent = 'tr'\n  }\n\n  $node = document.createElement(parent)\n  $node.innerHTML = template\n\n  if ($node.children.length !== 1) {\n    throw new Error('Component template must have a single parent node.', template)\n  }\n\n  return $node.firstElementChild\n}\n\nfunction addComponentId (template, component) {\n  // naive implementation of adding an attribute to the parent container.\n  // so we don't depend on a dom parser.\n  // downside is we can't warn that template MUST have a single parent (in Node.js).\n\n  // check void elements first.\n  var firstBracketIndex = template.indexOf('/>')\n\n  // non-void elements\n  if (firstBracketIndex === -1) {\n    firstBracketIndex = template.indexOf('>')\n  }\n\n  var attr = ` ${durrutiAttr}=\"${component._durrutiId}\"`\n\n  return template.substr(0, firstBracketIndex) + attr + template.substr(firstBracketIndex)\n}\n\n// traverse and find durruti nodes\nfunction getComponentNodes ($container, traverse = true, arr = []) {\n  if ($container._durruti) {\n    arr.push($container)\n  }\n\n  if (traverse && $container.children) {\n    for (let i = 0; i < $container.children.length; i++) {\n      getComponentNodes($container.children[i], traverse, arr)\n    }\n  }\n\n  return arr\n}\n\nclass Durruti {\n  server () {\n    clearComponentCache()\n\n    return this\n  }\n\n  render (component, $container) {\n    // decorate basic classes with durruti properties\n    var durrutiComponent = decorate(component)\n\n    if (typeof durrutiComponent.render === 'undefined') {\n      throw new Error('Components must have a render() method.')\n    }\n\n    var template = durrutiComponent.render()\n    var componentHtml = addComponentId(template, durrutiComponent)\n\n    // mount and unmount in browser, when we specify a container.\n    if (util.isClient && $container) {\n      // check if the container is still in the DOM.\n      // if using an old dom node reference.\n      if (!document.body.contains($container)) {\n        // warn for performance.\n        util.warn('Node', $container, 'is no longer in the DOM. \\nIt was probably removed by a parent component.')\n        return\n      }\n\n      var componentNodes = []\n      // convert the template string to a dom node\n      var $newComponent = createFragment(componentHtml)\n\n      // unmount component and sub-components\n      getComponentNodes($container).forEach(unmountNode)\n\n      // if the container is a durruti element,\n      // unmount it and it's children and replace the node.\n      if (getCachedComponent($container)) {\n        // remove the data attributes on the new node,\n        // before patch,\n        // and get the list of new components.\n        cleanAttrNodes($newComponent, true)\n\n        // get required dom patches\n        var patches = dom.diff($container, $newComponent)\n\n        patches.forEach(function (patch) {\n          // always update component instances,\n          // even if the dom doesn't change.\n          patch.node._durruti = patch.newNode._durruti\n\n          // patches contain all the traversed nodes.\n          // get the mount components here, for performance.\n          var foundComponentNodes = []\n\n          if (patch.replace) {\n            // traverse replaced node\n            // to get nested component nodes.\n            foundComponentNodes = getComponentNodes(patch.newNode)\n          } else {\n            // when not replacing a node,\n            // traversal is done by the dom patcher.\n            foundComponentNodes = getComponentNodes(patch.node, false)\n          }\n\n          // add found component nodes\n          Array.prototype.push.apply(componentNodes, foundComponentNodes)\n        })\n\n        // morph old dom node into new one\n        dom.patch(patches)\n      } else {\n        // if the component is not a durruti element,\n        // insert the template with innerHTML.\n\n        // only if the same html is not already rendered\n        if (!$container.firstElementChild ||\n          !$container.firstElementChild.isEqualNode($newComponent)) {\n          $container.innerHTML = componentHtml\n        }\n\n        componentNodes = cleanAttrNodes($container)\n      }\n\n      // mount newly added components\n      componentNodes.forEach(mountNode)\n    }\n\n    return componentHtml\n  }\n}\n\nexport default new Durruti()\n"],"names":["hasWindow","window","isClient","DURRUTI_DEBUG","warn","console","apply","arguments","removeListeners","events","domEventTypes","getDomEventTypes","eventTypes","attr","document","substr","push","originalAddEventListener","captureAddEventListener","type","fn","capture","target","removeNodeOnEvents","nodes","forEach","$node","eventType","removeNodeEvents","i","length","indexOf","removeEventListener","splice","getNodeList","traverse","children","util","Node","prototype","hasOwnProperty","addEventListener","EventTarget","propMap","tabindex","readonly","for","class","maxlength","cellspacing","cellpadding","rowspan","colspan","usemap","frameborder","contenteditable","$newNode","patches","childNodes","diff","mapAttributes","attrs","oldAttributes","attributes","newAttributes","name","toLowerCase","value","patchAttrs","prop","removeAttribute","setAttribute","patch","node","newNode","nodeType","tagName","replace","cloneNode","isEqualNode","update","applyPatch","parentNode","replaceChild","durrutiAttr","durrutiElemSelector","componentCache","componentIndex","decorate","Comp","component","Object","create","_durrutiId","String","id","getCachedComponent","_durruti","getAttribute","cleanAttrNodes","$container","includeParent","slice","call","querySelectorAll","unmountNode","cachedComponent","unmount","clearComponentCache","mountNode","mount","createFragment","template","trim","parent","createElement","innerHTML","Error","firstElementChild","addComponentId","firstBracketIndex","getComponentNodes","arr","Durruti","durrutiComponent","render","componentHtml","body","contains","componentNodes","$newComponent","dom","foundComponentNodes","Array"],"mappings":"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"}